# explicitly use v2 config format
  version = 2
  
  [proxy_plugins]
  # fuse-overlayfs is used for rootless
  [proxy_plugins."fuse-overlayfs"]
    type = "snapshot"
    address = "/run/containerd-fuse-overlayfs.sock"
  
  [grpc]
    address = "/run/containerd/containerd.sock"
    gid = 0
    max_recv_message_size = 16777216
    max_send_message_size = 16777216
    tcp_address = "0.0.0.0:8989"
    tcp_tls_ca = ""
    tcp_tls_cert = ""
    tcp_tls_key = ""
    uid = 0
  
  [plugins."io.containerd.grpc.v1.cri".containerd]
  # save disk space when using a single snapshotter
    discard_unpacked_layers = true
  # explicitly use default snapshotter so we can sed it in entrypoint
    snapshotter = "overlayfs"
  # explicit default here, as we're configuring it below
    default_runtime_name = "runc"
  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
  # set default runtime handler to v2, which has a per-pod shim
    runtime_type = "io.containerd.runc.v2"
  # Generated by "ctr oci spec" and modified at base container to mount poduct_uuid
    base_runtime_spec = "/etc/containerd/cri-base.json"
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
  # use systemd cgroup by default
    SystemdCgroup = true
  
  # Setup a runtime with the magic name ("test-handler") used for Kubernetes
  # runtime class tests ...
  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.test-handler]
  # same settings as runc
    runtime_type = "io.containerd.runc.v2"
    base_runtime_spec = "/etc/containerd/cri-base.json"
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.test-handler.options]
    SystemdCgroup = true
  
  [plugins."io.containerd.grpc.v1.cri"]
  # use fixed sandbox image
    sandbox_image = "registry.k8s.io/pause:3.7"
  # allow hugepages controller to be missing
  # see https://github.com/containerd/cri/pull/1501
    tolerate_missing_hugepages_controller = true
  # restrict_oom_score_adj needs to be true when running inside UserNS (rootless)
    restrict_oom_score_adj = false
    disable_tcp_service = false
    stream_server_address = "0.0.0.0"
  
  # Enable registry.k8s.io as the primary mirror for k8s.gcr.io
  # See: https://github.com/kubernetes/k8s.io/issues/3411
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"]
    endpoint = ["https://registry.k8s.io", "https://k8s.gcr.io",]